{"ast":null,"code":"var _jsxFileName = \"/home/bruna/Bruna-Nallis/modulo-3/projeto-cookenu/cookenu/src/pages/SingUpPage/SingUpForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { InputsContainer } from '../LoginPage/styled';\nimport { Button, TextField, CircularProgress } from '@material-ui/core';\nimport useForm from '../../hooks/useForm';\nimport { SingUp } from \"../../services/user\";\nimport { useHistory } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SingUpForm(_ref) {\n  _s();\n\n  let {\n    setRightButtonText\n  } = _ref;\n  const [form, onChange, clear] = useForm({\n    email: \"\",\n    password: \"\",\n    name: \"\"\n  });\n  const [isLoading, setIsLoading] = useState;\n  const history = useHistory();\n\n  const onSubmit = e => {\n    e.preventDefault();\n    SingUp(form, clear, history, setRightButtonText);\n  };\n\n  return /*#__PURE__*/_jsxDEV(InputsContainer, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        name: \"name\",\n        value: form.name,\n        onChange: onChange,\n        label: \"Nome\",\n        variant: 'outlined',\n        fullWidth: true,\n        margin: \"normal\",\n        required: true,\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"email\",\n        value: form.email,\n        onChange: onChange,\n        label: \"E-mail\",\n        variant: 'outlined',\n        fullWidth: true,\n        margin: \"normal\",\n        required: true,\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"password\",\n        value: form.password,\n        onChange: onChange,\n        label: \"Senha\",\n        variant: 'outlined',\n        fullWidth: true,\n        margin: \"normal\",\n        required: true,\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: 'submit',\n        fullWidth: true,\n        variant: 'contained',\n        color: 'primary',\n        children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: 'inherit',\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 30\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \" Fazer Cadastro\"\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SingUpForm, \"OeSHvGkjOrEo2SjRZMv4yvm0QBg=\", false, function () {\n  return [useForm, useHistory];\n});\n\n_c = SingUpForm;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingUpForm\");","map":{"version":3,"sources":["/home/bruna/Bruna-Nallis/modulo-3/projeto-cookenu/cookenu/src/pages/SingUpPage/SingUpForm.js"],"names":["React","useState","InputsContainer","Button","TextField","CircularProgress","useForm","SingUp","useHistory","SingUpForm","setRightButtonText","form","onChange","clear","email","password","name","isLoading","setIsLoading","history","onSubmit","e","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA2BC,gBAA3B,QAAoD,mBAApD;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,UAAT,QAA2B,cAA3B;;;AAEA,eAAe,SAASC,UAAT,OAA2C;AAAA;;AAAA,MAAvB;AAAEC,IAAAA;AAAF,GAAuB;AACtD,QAAM,CAACC,IAAD,EAAOC,QAAP,EAAiBC,KAAjB,IAA0BP,OAAO,CAAC;AAAEQ,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE,EAAvB;AAA2BC,IAAAA,IAAI,EAAE;AAAjC,GAAD,CAAvC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA0BjB,QAAhC;AACA,QAAMkB,OAAO,GAAGX,UAAU,EAA1B;;AAEA,QAAMY,QAAQ,GAAIC,CAAD,IAAO;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACAf,IAAAA,MAAM,CAACI,IAAD,EAAOE,KAAP,EAAcM,OAAd,EAAuBT,kBAAvB,CAAN;AACH,GAHD;;AAKA,sBACI,QAAC,eAAD;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAEU,QAAhB;AAAA,8BAEI,QAAC,SAAD;AACI,QAAA,IAAI,EAAE,MADV;AAEI,QAAA,KAAK,EAAET,IAAI,CAACK,IAFhB;AAGI,QAAA,QAAQ,EAAEJ,QAHd;AAII,QAAA,KAAK,EAAE,MAJX;AAKI,QAAA,OAAO,EAAE,UALb;AAMI,QAAA,SAAS,MANb;AAOI,QAAA,MAAM,EAAE,QAPZ;AAQI,QAAA,QAAQ,MARZ;AASI,QAAA,IAAI,EAAE;AATV;AAAA;AAAA;AAAA;AAAA,cAFJ,eAaI,QAAC,SAAD;AACI,QAAA,IAAI,EAAE,OADV;AAEI,QAAA,KAAK,EAAED,IAAI,CAACG,KAFhB;AAGI,QAAA,QAAQ,EAAEF,QAHd;AAII,QAAA,KAAK,EAAE,QAJX;AAKI,QAAA,OAAO,EAAE,UALb;AAMI,QAAA,SAAS,MANb;AAOI,QAAA,MAAM,EAAE,QAPZ;AAQI,QAAA,QAAQ,MARZ;AASI,QAAA,IAAI,EAAE;AATV;AAAA;AAAA;AAAA;AAAA,cAbJ,eAwBI,QAAC,SAAD;AACI,QAAA,IAAI,EAAE,UADV;AAEI,QAAA,KAAK,EAAED,IAAI,CAACI,QAFhB;AAGI,QAAA,QAAQ,EAAEH,QAHd;AAII,QAAA,KAAK,EAAE,OAJX;AAKI,QAAA,OAAO,EAAE,UALb;AAMI,QAAA,SAAS,MANb;AAOI,QAAA,MAAM,EAAE,QAPZ;AAQI,QAAA,QAAQ,MARZ;AASI,QAAA,IAAI,EAAE;AATV;AAAA;AAAA;AAAA;AAAA,cAxBJ,eAmCI,QAAC,MAAD;AACI,QAAA,IAAI,EAAE,QADV;AAEI,QAAA,SAAS,MAFb;AAGI,QAAA,OAAO,EAAE,WAHb;AAII,QAAA,KAAK,EAAE,SAJX;AAAA,kBAKEK,SAAS,gBAAE,QAAC,gBAAD;AAAkB,UAAA,KAAK,EAAE,SAAzB;AAAoC,UAAA,IAAI,EAAE;AAA1C;AAAA;AAAA;AAAA;AAAA,gBAAF,gBAAoD;AAAA;AAAA;AAL/D;AAAA;AAAA;AAAA;AAAA,cAnCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqDH;;GA/DuBR,U;UACYH,O,EAEhBE,U;;;KAHIC,U;AA+DvB","sourcesContent":["import React, { useState } from 'react';\nimport { InputsContainer } from '../LoginPage/styled';\nimport { Button, TextField,CircularProgress  } from '@material-ui/core';\nimport useForm from '../../hooks/useForm';\nimport { SingUp } from \"../../services/user\";\nimport { useHistory } from 'react-router';\n\nexport default function SingUpForm({ setRightButtonText}) {\n    const [form, onChange, clear] = useForm({ email: \"\", password: \"\", name: \"\" })\n    const [isLoading, setIsLoading]=useState\n    const history = useHistory ()\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        SingUp(form, clear, history, setRightButtonText)\n    };\n\n    return (\n        <InputsContainer>\n            <form onSubmit={onSubmit}>\n\n                <TextField\n                    name={\"name\"}\n                    value={form.name}\n                    onChange={onChange}\n                    label={\"Nome\"}\n                    variant={'outlined'}\n                    fullWidth\n                    margin={\"normal\"}\n                    required\n                    type={\"password\"}\n                />\n                <TextField\n                    name={\"email\"}\n                    value={form.email}\n                    onChange={onChange}\n                    label={\"E-mail\"}\n                    variant={'outlined'}\n                    fullWidth\n                    margin={\"normal\"}\n                    required\n                    type={\"email\"}\n                />\n                <TextField\n                    name={\"password\"}\n                    value={form.password}\n                    onChange={onChange}\n                    label={\"Senha\"}\n                    variant={'outlined'}\n                    fullWidth\n                    margin={\"normal\"}\n                    required\n                    type={\"password\"}\n                />\n                <Button\n                    type={'submit'}\n                    fullWidth\n                    variant={'contained'}\n                    color={'primary'}\n                >{isLoading? <CircularProgress color={'inherit'} size={24}/> : <> Fazer Cadastro</>}</Button>\n            </form>\n\n        </InputsContainer>\n\n    );\n\n\n\n\n\n};\n\n"]},"metadata":{},"sourceType":"module"}